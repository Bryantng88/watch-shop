// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  PENDING     // tạo đơn, chưa thanh toán
  PAID        // đã thanh toán
  PROCESSING  // đang xử lý/đóng gói
  SHIPPED     // đã giao cho vận chuyển
  COMPLETED   // hoàn tất
  CANCELLED   // huỷ
}

enum ProductStatus {
  ACTIVE
  HOLD
  SOLD
  CONSIGNED
  HIDDEN
}

enum PaymentStatus { UNPAID PAID REFUNDED }
enum Gender { MEN WOMEN UNISEX }
enum Glass { SAPPHIRE ACRYLLIC MINERAL HARDLEX AR_COATED }
enum ImageRole { PRIMARY GALLERY THUMB }
enum BrandStatus { ACTIVE INACTIVE HIDDEN }
enum CaseType { ROUND TANK SQUARE SPECIAL OTHER TONNEAU CUSHION OVAL ASYMMETRICAL OCTAGON POLYGON }
enum BrandStatus { ACTIVE INACTIVE HIDDEN }
enum Strap {
  LEATHER
  BRACELET
  RUBBER
  NATO
  CANVAS
  SPECIAL
}

enum PaymentMethod {
  COD
  MOMO
  CREDIT_CARD
  BANK_TRANSFER
  PAYPAL
}

enum MovementType {
  AUTOMATIC
  HAND_WOUND
  QUARTZ
  SOLAR
  KINETIC
  MECHAQUARTZ
  SPRING_DRIVE
  HYBRID

}

enum CaseMaterial {
  STAINLESS_STEEL
  TITANIUM
  CERAMIC
  CARBON
  GOLD
  PLATINUM
  SILVER
  BRASS
  TWO_TONE
  OTHER
}

enum GoldColor { YELLOW WHITE ROSE }

model MarketSegment {
  id    String   @id @default(cuid())
  name  String   @unique
  products Product[]
}

model Function {
  id    String   @id @default(cuid())
  name  String   @unique
  products Product[]
}

model Customer {
  id          String   @id @default(cuid())
  email       String?  @unique
  phone       String?  @db.VarChar(32)
  name        String?
  // địa chỉ mặc định (tuỳ chọn, vì lúc đặt vẫn lưu snapshot bên Order)
  address     String?
  ward        String?
  city        String?

  orders      Order[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([phone])
  @@index([name])
}

model Order {
  id            String        @id @default(cuid())
  orderCode     String        @unique // ví dụ "ORD-123456"
  customer      Customer?     @relation(fields: [customerId], references: [id])
  customerId    String?

  // --- Snapshot thông tin giao hàng lúc đặt (không phụ thuộc Customer) ---
  shipName      String
  shipPhone     String
  shipEmail     String
  shipAddress   String
  shipWard      String?
  shipCity      String

  // --- Tiền tệ ---
  subtotal      Decimal       @db.Decimal(12, 2)
  shippingFee   Decimal?      @db.Decimal(12, 2)
  total         Decimal       @db.Decimal(12, 2)

  status        OrderStatus   @default(PENDING)
  paymentStatus PaymentStatus @default(UNPAID)
  paymentMethod PaymentMethod? // nếu biết được

  items         OrderItem[]

  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt

  @@index([customerId])
  @@index([status])
  @@index([createdAt])
}

model OrderItem {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String

  // --- Snapshot sản phẩm tại thời điểm đặt ---
  productId String? // nếu bạn có bảng products riêng
  title     String
  price     Decimal @db.Decimal(12, 2)
  quantity  Int
  subtotal  Decimal @db.Decimal(12, 2)

  img       String? // ảnh minh hoạ lúc đặt (tuỳ chọn)

  createdAt DateTime @default(now())

  @@index([orderId])
  @@index([productId])
}



model Product {
  id                  String            @id @default(cuid())
  slug                String            @unique        // dùng cho URL
  title               String
  ref                 String?                       // mã tham chiếu tuỳ bạn
  brandId             String?
  brand               Brand?            @relation(fields: [brandId], references: [id], onDelete: SetNull)
  model               String?
  year                String?
  price               Decimal           @db.Decimal(12,2) // giá niêm yết
  caseType            CaseType          @default(ROUND)
  marketSegment       MarketSegment[]
  function            Function[]
  category            Category[]
  Gender              Gender            @default(MEN)
  length              Decimal           @db.Decimal(12,2) 
  width               Decimal           @db.Decimal(12,2) 
  thickness           Decimal           @db.Decimal(12,2) 
  movement            MovementType      @default(AUTOMATIC)
  caliber             String?
  caseMaterial        CaseMaterial      @default(STAINLESS_STEEL)
  goldKarat           Int?              // chỉ dùng khi caseMaterial = GOLD
  goldColor           GoldColor?        // chỉ dùng khi caseMaterial = GOLD
  caseSize            String?
  dialColor           String?
  strap               Strap             @default(LEATHER)
  glass               Glass             @default(MINERAL)
  image               ProductImage[]
  boxIncluded         Boolean           @default(false)
  bookletIncluded     Boolean           @default(false)
  cardIncluded        Boolean           @default(false)
 
  status              ProductStatus     @default(ACTIVE)
  createdAt           DateTime          @default(now())
  updatedAt           DateTime          @updatedAt

  // nếu có OrderItem trỏ về, bạn vẫn sửa product bình thường;
  // snapshot trên OrderItem giúp hóa đơn không đổi.
  orderItems OrderItem[]

  @@index([status])
  @@index([brand])
  @@index([slug])
  
}

model Brand {
  id            String   @id @default(cuid())
  name          String
  slug          String   @unique          // dùng cho URL
  country       String?                   // "Japan", "Switzerland"...
  foundedYear   Int?
  website       String?
  logoUrl       String?
  isAuthorized  Boolean  @default(false)  // bạn là đại lý ủy quyền?
  status        BrandStatus @default(ACTIVE)
  description   String?

  // optional: cho SEO / sắp xếp
  sortOrder     Int      @default(0)

  products      Product[]

  @@unique([name])            // chống trùng
  @@index([country])
  @@index([status, sortOrder])
}

model ProductImage {
  id          String   @id @default(cuid())
  product     Product  @relation(fields: [productId], references: [id])
  productId   String

  // Khóa trong bucket (không gồm domain)
  fileKey     String   // vd: "products/ck98.../a2f3-...-main.jpg"

  // Metadata hữu ích
  role        ImageRole @default(GALLERY)
  alt         String?
  width       Int?
  height      Int?
  mime        String?
  sizeBytes   Int?
  sortOrder   Int       @default(0)
  dominantHex String?   // dùng làm blur/placeholder

  // Bất biến & kiểm soát cache
  contentHash String?   // dùng để kiểm tra trùng/đổi tên theo hash

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

