import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { StrapVariantSpecOrderByWithRelationInputObjectSchema as StrapVariantSpecOrderByWithRelationInputObjectSchema } from './objects/StrapVariantSpecOrderByWithRelationInput.schema';
import { StrapVariantSpecWhereInputObjectSchema as StrapVariantSpecWhereInputObjectSchema } from './objects/StrapVariantSpecWhereInput.schema';
import { StrapVariantSpecWhereUniqueInputObjectSchema as StrapVariantSpecWhereUniqueInputObjectSchema } from './objects/StrapVariantSpecWhereUniqueInput.schema';
import { StrapVariantSpecCountAggregateInputObjectSchema as StrapVariantSpecCountAggregateInputObjectSchema } from './objects/StrapVariantSpecCountAggregateInput.schema';
import { StrapVariantSpecMinAggregateInputObjectSchema as StrapVariantSpecMinAggregateInputObjectSchema } from './objects/StrapVariantSpecMinAggregateInput.schema';
import { StrapVariantSpecMaxAggregateInputObjectSchema as StrapVariantSpecMaxAggregateInputObjectSchema } from './objects/StrapVariantSpecMaxAggregateInput.schema';
import { StrapVariantSpecAvgAggregateInputObjectSchema as StrapVariantSpecAvgAggregateInputObjectSchema } from './objects/StrapVariantSpecAvgAggregateInput.schema';
import { StrapVariantSpecSumAggregateInputObjectSchema as StrapVariantSpecSumAggregateInputObjectSchema } from './objects/StrapVariantSpecSumAggregateInput.schema';

export const StrapVariantSpecAggregateSchema: z.ZodType<Prisma.StrapVariantSpecAggregateArgs> = z.object({ orderBy: z.union([StrapVariantSpecOrderByWithRelationInputObjectSchema, StrapVariantSpecOrderByWithRelationInputObjectSchema.array()]).optional(), where: StrapVariantSpecWhereInputObjectSchema.optional(), cursor: StrapVariantSpecWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), StrapVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: StrapVariantSpecMinAggregateInputObjectSchema.optional(), _max: StrapVariantSpecMaxAggregateInputObjectSchema.optional(), _avg: StrapVariantSpecAvgAggregateInputObjectSchema.optional(), _sum: StrapVariantSpecSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.StrapVariantSpecAggregateArgs>;

export const StrapVariantSpecAggregateZodSchema = z.object({ orderBy: z.union([StrapVariantSpecOrderByWithRelationInputObjectSchema, StrapVariantSpecOrderByWithRelationInputObjectSchema.array()]).optional(), where: StrapVariantSpecWhereInputObjectSchema.optional(), cursor: StrapVariantSpecWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), StrapVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: StrapVariantSpecMinAggregateInputObjectSchema.optional(), _max: StrapVariantSpecMaxAggregateInputObjectSchema.optional(), _avg: StrapVariantSpecAvgAggregateInputObjectSchema.optional(), _sum: StrapVariantSpecSumAggregateInputObjectSchema.optional() }).strict();