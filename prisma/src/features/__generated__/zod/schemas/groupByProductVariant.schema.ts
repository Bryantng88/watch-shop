import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { ProductVariantWhereInputObjectSchema as ProductVariantWhereInputObjectSchema } from './objects/ProductVariantWhereInput.schema';
import { ProductVariantOrderByWithAggregationInputObjectSchema as ProductVariantOrderByWithAggregationInputObjectSchema } from './objects/ProductVariantOrderByWithAggregationInput.schema';
import { ProductVariantScalarWhereWithAggregatesInputObjectSchema as ProductVariantScalarWhereWithAggregatesInputObjectSchema } from './objects/ProductVariantScalarWhereWithAggregatesInput.schema';
import { ProductVariantScalarFieldEnumSchema } from './enums/ProductVariantScalarFieldEnum.schema';
import { ProductVariantCountAggregateInputObjectSchema as ProductVariantCountAggregateInputObjectSchema } from './objects/ProductVariantCountAggregateInput.schema';
import { ProductVariantMinAggregateInputObjectSchema as ProductVariantMinAggregateInputObjectSchema } from './objects/ProductVariantMinAggregateInput.schema';
import { ProductVariantMaxAggregateInputObjectSchema as ProductVariantMaxAggregateInputObjectSchema } from './objects/ProductVariantMaxAggregateInput.schema';
import { ProductVariantAvgAggregateInputObjectSchema as ProductVariantAvgAggregateInputObjectSchema } from './objects/ProductVariantAvgAggregateInput.schema';
import { ProductVariantSumAggregateInputObjectSchema as ProductVariantSumAggregateInputObjectSchema } from './objects/ProductVariantSumAggregateInput.schema';

export const ProductVariantGroupBySchema: z.ZodType<Prisma.ProductVariantGroupByArgs> = z.object({ where: ProductVariantWhereInputObjectSchema.optional(), orderBy: z.union([ProductVariantOrderByWithAggregationInputObjectSchema, ProductVariantOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ProductVariantScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ProductVariantScalarFieldEnumSchema), _count: z.union([ z.literal(true), ProductVariantCountAggregateInputObjectSchema ]).optional(), _min: ProductVariantMinAggregateInputObjectSchema.optional(), _max: ProductVariantMaxAggregateInputObjectSchema.optional(), _avg: ProductVariantAvgAggregateInputObjectSchema.optional(), _sum: ProductVariantSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.ProductVariantGroupByArgs>;

export const ProductVariantGroupByZodSchema = z.object({ where: ProductVariantWhereInputObjectSchema.optional(), orderBy: z.union([ProductVariantOrderByWithAggregationInputObjectSchema, ProductVariantOrderByWithAggregationInputObjectSchema.array()]).optional(), having: ProductVariantScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(ProductVariantScalarFieldEnumSchema), _count: z.union([ z.literal(true), ProductVariantCountAggregateInputObjectSchema ]).optional(), _min: ProductVariantMinAggregateInputObjectSchema.optional(), _max: ProductVariantMaxAggregateInputObjectSchema.optional(), _avg: ProductVariantAvgAggregateInputObjectSchema.optional(), _sum: ProductVariantSumAggregateInputObjectSchema.optional() }).strict();