import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { AcquisitionWhereInputObjectSchema as AcquisitionWhereInputObjectSchema } from './objects/AcquisitionWhereInput.schema';
import { AcquisitionOrderByWithAggregationInputObjectSchema as AcquisitionOrderByWithAggregationInputObjectSchema } from './objects/AcquisitionOrderByWithAggregationInput.schema';
import { AcquisitionScalarWhereWithAggregatesInputObjectSchema as AcquisitionScalarWhereWithAggregatesInputObjectSchema } from './objects/AcquisitionScalarWhereWithAggregatesInput.schema';
import { AcquisitionScalarFieldEnumSchema } from './enums/AcquisitionScalarFieldEnum.schema';
import { AcquisitionCountAggregateInputObjectSchema as AcquisitionCountAggregateInputObjectSchema } from './objects/AcquisitionCountAggregateInput.schema';
import { AcquisitionMinAggregateInputObjectSchema as AcquisitionMinAggregateInputObjectSchema } from './objects/AcquisitionMinAggregateInput.schema';
import { AcquisitionMaxAggregateInputObjectSchema as AcquisitionMaxAggregateInputObjectSchema } from './objects/AcquisitionMaxAggregateInput.schema';
import { AcquisitionAvgAggregateInputObjectSchema as AcquisitionAvgAggregateInputObjectSchema } from './objects/AcquisitionAvgAggregateInput.schema';
import { AcquisitionSumAggregateInputObjectSchema as AcquisitionSumAggregateInputObjectSchema } from './objects/AcquisitionSumAggregateInput.schema';

export const AcquisitionGroupBySchema: z.ZodType<Prisma.AcquisitionGroupByArgs> = z.object({ where: AcquisitionWhereInputObjectSchema.optional(), orderBy: z.union([AcquisitionOrderByWithAggregationInputObjectSchema, AcquisitionOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AcquisitionScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AcquisitionScalarFieldEnumSchema), _count: z.union([ z.literal(true), AcquisitionCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionMinAggregateInputObjectSchema.optional(), _max: AcquisitionMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AcquisitionGroupByArgs>;

export const AcquisitionGroupByZodSchema = z.object({ where: AcquisitionWhereInputObjectSchema.optional(), orderBy: z.union([AcquisitionOrderByWithAggregationInputObjectSchema, AcquisitionOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AcquisitionScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AcquisitionScalarFieldEnumSchema), _count: z.union([ z.literal(true), AcquisitionCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionMinAggregateInputObjectSchema.optional(), _max: AcquisitionMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionSumAggregateInputObjectSchema.optional() }).strict();