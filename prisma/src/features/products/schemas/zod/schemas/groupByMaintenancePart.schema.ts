import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { MaintenancePartWhereInputObjectSchema as MaintenancePartWhereInputObjectSchema } from './objects/MaintenancePartWhereInput.schema';
import { MaintenancePartOrderByWithAggregationInputObjectSchema as MaintenancePartOrderByWithAggregationInputObjectSchema } from './objects/MaintenancePartOrderByWithAggregationInput.schema';
import { MaintenancePartScalarWhereWithAggregatesInputObjectSchema as MaintenancePartScalarWhereWithAggregatesInputObjectSchema } from './objects/MaintenancePartScalarWhereWithAggregatesInput.schema';
import { MaintenancePartScalarFieldEnumSchema } from './enums/MaintenancePartScalarFieldEnum.schema';
import { MaintenancePartCountAggregateInputObjectSchema as MaintenancePartCountAggregateInputObjectSchema } from './objects/MaintenancePartCountAggregateInput.schema';
import { MaintenancePartMinAggregateInputObjectSchema as MaintenancePartMinAggregateInputObjectSchema } from './objects/MaintenancePartMinAggregateInput.schema';
import { MaintenancePartMaxAggregateInputObjectSchema as MaintenancePartMaxAggregateInputObjectSchema } from './objects/MaintenancePartMaxAggregateInput.schema';
import { MaintenancePartAvgAggregateInputObjectSchema as MaintenancePartAvgAggregateInputObjectSchema } from './objects/MaintenancePartAvgAggregateInput.schema';
import { MaintenancePartSumAggregateInputObjectSchema as MaintenancePartSumAggregateInputObjectSchema } from './objects/MaintenancePartSumAggregateInput.schema';

export const MaintenancePartGroupBySchema: z.ZodType<Prisma.MaintenancePartGroupByArgs> = z.object({ where: MaintenancePartWhereInputObjectSchema.optional(), orderBy: z.union([MaintenancePartOrderByWithAggregationInputObjectSchema, MaintenancePartOrderByWithAggregationInputObjectSchema.array()]).optional(), having: MaintenancePartScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(MaintenancePartScalarFieldEnumSchema), _count: z.union([ z.literal(true), MaintenancePartCountAggregateInputObjectSchema ]).optional(), _min: MaintenancePartMinAggregateInputObjectSchema.optional(), _max: MaintenancePartMaxAggregateInputObjectSchema.optional(), _avg: MaintenancePartAvgAggregateInputObjectSchema.optional(), _sum: MaintenancePartSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.MaintenancePartGroupByArgs>;

export const MaintenancePartGroupByZodSchema = z.object({ where: MaintenancePartWhereInputObjectSchema.optional(), orderBy: z.union([MaintenancePartOrderByWithAggregationInputObjectSchema, MaintenancePartOrderByWithAggregationInputObjectSchema.array()]).optional(), having: MaintenancePartScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(MaintenancePartScalarFieldEnumSchema), _count: z.union([ z.literal(true), MaintenancePartCountAggregateInputObjectSchema ]).optional(), _min: MaintenancePartMinAggregateInputObjectSchema.optional(), _max: MaintenancePartMaxAggregateInputObjectSchema.optional(), _avg: MaintenancePartAvgAggregateInputObjectSchema.optional(), _sum: MaintenancePartSumAggregateInputObjectSchema.optional() }).strict();