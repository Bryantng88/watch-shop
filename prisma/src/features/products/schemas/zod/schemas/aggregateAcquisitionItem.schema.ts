import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { AcquisitionItemOrderByWithRelationInputObjectSchema as AcquisitionItemOrderByWithRelationInputObjectSchema } from './objects/AcquisitionItemOrderByWithRelationInput.schema';
import { AcquisitionItemWhereInputObjectSchema as AcquisitionItemWhereInputObjectSchema } from './objects/AcquisitionItemWhereInput.schema';
import { AcquisitionItemWhereUniqueInputObjectSchema as AcquisitionItemWhereUniqueInputObjectSchema } from './objects/AcquisitionItemWhereUniqueInput.schema';
import { AcquisitionItemCountAggregateInputObjectSchema as AcquisitionItemCountAggregateInputObjectSchema } from './objects/AcquisitionItemCountAggregateInput.schema';
import { AcquisitionItemMinAggregateInputObjectSchema as AcquisitionItemMinAggregateInputObjectSchema } from './objects/AcquisitionItemMinAggregateInput.schema';
import { AcquisitionItemMaxAggregateInputObjectSchema as AcquisitionItemMaxAggregateInputObjectSchema } from './objects/AcquisitionItemMaxAggregateInput.schema';
import { AcquisitionItemAvgAggregateInputObjectSchema as AcquisitionItemAvgAggregateInputObjectSchema } from './objects/AcquisitionItemAvgAggregateInput.schema';
import { AcquisitionItemSumAggregateInputObjectSchema as AcquisitionItemSumAggregateInputObjectSchema } from './objects/AcquisitionItemSumAggregateInput.schema';

export const AcquisitionItemAggregateSchema: z.ZodType<Prisma.AcquisitionItemAggregateArgs> = z.object({ orderBy: z.union([AcquisitionItemOrderByWithRelationInputObjectSchema, AcquisitionItemOrderByWithRelationInputObjectSchema.array()]).optional(), where: AcquisitionItemWhereInputObjectSchema.optional(), cursor: AcquisitionItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), AcquisitionItemCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionItemMinAggregateInputObjectSchema.optional(), _max: AcquisitionItemMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionItemAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionItemSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AcquisitionItemAggregateArgs>;

export const AcquisitionItemAggregateZodSchema = z.object({ orderBy: z.union([AcquisitionItemOrderByWithRelationInputObjectSchema, AcquisitionItemOrderByWithRelationInputObjectSchema.array()]).optional(), where: AcquisitionItemWhereInputObjectSchema.optional(), cursor: AcquisitionItemWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), AcquisitionItemCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionItemMinAggregateInputObjectSchema.optional(), _max: AcquisitionItemMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionItemAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionItemSumAggregateInputObjectSchema.optional() }).strict();