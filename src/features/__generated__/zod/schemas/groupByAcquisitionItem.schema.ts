import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { AcquisitionItemWhereInputObjectSchema as AcquisitionItemWhereInputObjectSchema } from './objects/AcquisitionItemWhereInput.schema';
import { AcquisitionItemOrderByWithAggregationInputObjectSchema as AcquisitionItemOrderByWithAggregationInputObjectSchema } from './objects/AcquisitionItemOrderByWithAggregationInput.schema';
import { AcquisitionItemScalarWhereWithAggregatesInputObjectSchema as AcquisitionItemScalarWhereWithAggregatesInputObjectSchema } from './objects/AcquisitionItemScalarWhereWithAggregatesInput.schema';
import { AcquisitionItemScalarFieldEnumSchema } from './enums/AcquisitionItemScalarFieldEnum.schema';
import { AcquisitionItemCountAggregateInputObjectSchema as AcquisitionItemCountAggregateInputObjectSchema } from './objects/AcquisitionItemCountAggregateInput.schema';
import { AcquisitionItemMinAggregateInputObjectSchema as AcquisitionItemMinAggregateInputObjectSchema } from './objects/AcquisitionItemMinAggregateInput.schema';
import { AcquisitionItemMaxAggregateInputObjectSchema as AcquisitionItemMaxAggregateInputObjectSchema } from './objects/AcquisitionItemMaxAggregateInput.schema';
import { AcquisitionItemAvgAggregateInputObjectSchema as AcquisitionItemAvgAggregateInputObjectSchema } from './objects/AcquisitionItemAvgAggregateInput.schema';
import { AcquisitionItemSumAggregateInputObjectSchema as AcquisitionItemSumAggregateInputObjectSchema } from './objects/AcquisitionItemSumAggregateInput.schema';

export const AcquisitionItemGroupBySchema: z.ZodType<Prisma.AcquisitionItemGroupByArgs> = z.object({ where: AcquisitionItemWhereInputObjectSchema.optional(), orderBy: z.union([AcquisitionItemOrderByWithAggregationInputObjectSchema, AcquisitionItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AcquisitionItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AcquisitionItemScalarFieldEnumSchema), _count: z.union([ z.literal(true), AcquisitionItemCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionItemMinAggregateInputObjectSchema.optional(), _max: AcquisitionItemMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionItemAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionItemSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.AcquisitionItemGroupByArgs>;

export const AcquisitionItemGroupByZodSchema = z.object({ where: AcquisitionItemWhereInputObjectSchema.optional(), orderBy: z.union([AcquisitionItemOrderByWithAggregationInputObjectSchema, AcquisitionItemOrderByWithAggregationInputObjectSchema.array()]).optional(), having: AcquisitionItemScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(AcquisitionItemScalarFieldEnumSchema), _count: z.union([ z.literal(true), AcquisitionItemCountAggregateInputObjectSchema ]).optional(), _min: AcquisitionItemMinAggregateInputObjectSchema.optional(), _max: AcquisitionItemMaxAggregateInputObjectSchema.optional(), _avg: AcquisitionItemAvgAggregateInputObjectSchema.optional(), _sum: AcquisitionItemSumAggregateInputObjectSchema.optional() }).strict();