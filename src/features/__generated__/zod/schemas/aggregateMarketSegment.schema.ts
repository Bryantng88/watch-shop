import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { MarketSegmentOrderByWithRelationInputObjectSchema as MarketSegmentOrderByWithRelationInputObjectSchema } from './objects/MarketSegmentOrderByWithRelationInput.schema';
import { MarketSegmentWhereInputObjectSchema as MarketSegmentWhereInputObjectSchema } from './objects/MarketSegmentWhereInput.schema';
import { MarketSegmentWhereUniqueInputObjectSchema as MarketSegmentWhereUniqueInputObjectSchema } from './objects/MarketSegmentWhereUniqueInput.schema';
import { MarketSegmentCountAggregateInputObjectSchema as MarketSegmentCountAggregateInputObjectSchema } from './objects/MarketSegmentCountAggregateInput.schema';
import { MarketSegmentMinAggregateInputObjectSchema as MarketSegmentMinAggregateInputObjectSchema } from './objects/MarketSegmentMinAggregateInput.schema';
import { MarketSegmentMaxAggregateInputObjectSchema as MarketSegmentMaxAggregateInputObjectSchema } from './objects/MarketSegmentMaxAggregateInput.schema';

export const MarketSegmentAggregateSchema: z.ZodType<Prisma.MarketSegmentAggregateArgs> = z.object({ orderBy: z.union([MarketSegmentOrderByWithRelationInputObjectSchema, MarketSegmentOrderByWithRelationInputObjectSchema.array()]).optional(), where: MarketSegmentWhereInputObjectSchema.optional(), cursor: MarketSegmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), MarketSegmentCountAggregateInputObjectSchema ]).optional(), _min: MarketSegmentMinAggregateInputObjectSchema.optional(), _max: MarketSegmentMaxAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.MarketSegmentAggregateArgs>;

export const MarketSegmentAggregateZodSchema = z.object({ orderBy: z.union([MarketSegmentOrderByWithRelationInputObjectSchema, MarketSegmentOrderByWithRelationInputObjectSchema.array()]).optional(), where: MarketSegmentWhereInputObjectSchema.optional(), cursor: MarketSegmentWhereUniqueInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), _count: z.union([ z.literal(true), MarketSegmentCountAggregateInputObjectSchema ]).optional(), _min: MarketSegmentMinAggregateInputObjectSchema.optional(), _max: MarketSegmentMaxAggregateInputObjectSchema.optional() }).strict();