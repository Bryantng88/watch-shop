import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { PartVariantSpecWhereInputObjectSchema as PartVariantSpecWhereInputObjectSchema } from './objects/PartVariantSpecWhereInput.schema';
import { PartVariantSpecOrderByWithAggregationInputObjectSchema as PartVariantSpecOrderByWithAggregationInputObjectSchema } from './objects/PartVariantSpecOrderByWithAggregationInput.schema';
import { PartVariantSpecScalarWhereWithAggregatesInputObjectSchema as PartVariantSpecScalarWhereWithAggregatesInputObjectSchema } from './objects/PartVariantSpecScalarWhereWithAggregatesInput.schema';
import { PartVariantSpecScalarFieldEnumSchema } from './enums/PartVariantSpecScalarFieldEnum.schema';
import { PartVariantSpecCountAggregateInputObjectSchema as PartVariantSpecCountAggregateInputObjectSchema } from './objects/PartVariantSpecCountAggregateInput.schema';
import { PartVariantSpecMinAggregateInputObjectSchema as PartVariantSpecMinAggregateInputObjectSchema } from './objects/PartVariantSpecMinAggregateInput.schema';
import { PartVariantSpecMaxAggregateInputObjectSchema as PartVariantSpecMaxAggregateInputObjectSchema } from './objects/PartVariantSpecMaxAggregateInput.schema';

export const PartVariantSpecGroupBySchema: z.ZodType<Prisma.PartVariantSpecGroupByArgs> = z.object({ where: PartVariantSpecWhereInputObjectSchema.optional(), orderBy: z.union([PartVariantSpecOrderByWithAggregationInputObjectSchema, PartVariantSpecOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PartVariantSpecScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(PartVariantSpecScalarFieldEnumSchema), _count: z.union([ z.literal(true), PartVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: PartVariantSpecMinAggregateInputObjectSchema.optional(), _max: PartVariantSpecMaxAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.PartVariantSpecGroupByArgs>;

export const PartVariantSpecGroupByZodSchema = z.object({ where: PartVariantSpecWhereInputObjectSchema.optional(), orderBy: z.union([PartVariantSpecOrderByWithAggregationInputObjectSchema, PartVariantSpecOrderByWithAggregationInputObjectSchema.array()]).optional(), having: PartVariantSpecScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(PartVariantSpecScalarFieldEnumSchema), _count: z.union([ z.literal(true), PartVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: PartVariantSpecMinAggregateInputObjectSchema.optional(), _max: PartVariantSpecMaxAggregateInputObjectSchema.optional() }).strict();