import type { Prisma } from '@prisma/client';
import * as z from 'zod';
import { StrapVariantSpecWhereInputObjectSchema as StrapVariantSpecWhereInputObjectSchema } from './objects/StrapVariantSpecWhereInput.schema';
import { StrapVariantSpecOrderByWithAggregationInputObjectSchema as StrapVariantSpecOrderByWithAggregationInputObjectSchema } from './objects/StrapVariantSpecOrderByWithAggregationInput.schema';
import { StrapVariantSpecScalarWhereWithAggregatesInputObjectSchema as StrapVariantSpecScalarWhereWithAggregatesInputObjectSchema } from './objects/StrapVariantSpecScalarWhereWithAggregatesInput.schema';
import { StrapVariantSpecScalarFieldEnumSchema } from './enums/StrapVariantSpecScalarFieldEnum.schema';
import { StrapVariantSpecCountAggregateInputObjectSchema as StrapVariantSpecCountAggregateInputObjectSchema } from './objects/StrapVariantSpecCountAggregateInput.schema';
import { StrapVariantSpecMinAggregateInputObjectSchema as StrapVariantSpecMinAggregateInputObjectSchema } from './objects/StrapVariantSpecMinAggregateInput.schema';
import { StrapVariantSpecMaxAggregateInputObjectSchema as StrapVariantSpecMaxAggregateInputObjectSchema } from './objects/StrapVariantSpecMaxAggregateInput.schema';
import { StrapVariantSpecAvgAggregateInputObjectSchema as StrapVariantSpecAvgAggregateInputObjectSchema } from './objects/StrapVariantSpecAvgAggregateInput.schema';
import { StrapVariantSpecSumAggregateInputObjectSchema as StrapVariantSpecSumAggregateInputObjectSchema } from './objects/StrapVariantSpecSumAggregateInput.schema';

export const StrapVariantSpecGroupBySchema: z.ZodType<Prisma.StrapVariantSpecGroupByArgs> = z.object({ where: StrapVariantSpecWhereInputObjectSchema.optional(), orderBy: z.union([StrapVariantSpecOrderByWithAggregationInputObjectSchema, StrapVariantSpecOrderByWithAggregationInputObjectSchema.array()]).optional(), having: StrapVariantSpecScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(StrapVariantSpecScalarFieldEnumSchema), _count: z.union([ z.literal(true), StrapVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: StrapVariantSpecMinAggregateInputObjectSchema.optional(), _max: StrapVariantSpecMaxAggregateInputObjectSchema.optional(), _avg: StrapVariantSpecAvgAggregateInputObjectSchema.optional(), _sum: StrapVariantSpecSumAggregateInputObjectSchema.optional() }).strict() as unknown as z.ZodType<Prisma.StrapVariantSpecGroupByArgs>;

export const StrapVariantSpecGroupByZodSchema = z.object({ where: StrapVariantSpecWhereInputObjectSchema.optional(), orderBy: z.union([StrapVariantSpecOrderByWithAggregationInputObjectSchema, StrapVariantSpecOrderByWithAggregationInputObjectSchema.array()]).optional(), having: StrapVariantSpecScalarWhereWithAggregatesInputObjectSchema.optional(), take: z.number().optional(), skip: z.number().optional(), by: z.array(StrapVariantSpecScalarFieldEnumSchema), _count: z.union([ z.literal(true), StrapVariantSpecCountAggregateInputObjectSchema ]).optional(), _min: StrapVariantSpecMinAggregateInputObjectSchema.optional(), _max: StrapVariantSpecMaxAggregateInputObjectSchema.optional(), _avg: StrapVariantSpecAvgAggregateInputObjectSchema.optional(), _sum: StrapVariantSpecSumAggregateInputObjectSchema.optional() }).strict();